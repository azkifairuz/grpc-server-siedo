// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.0
//   protoc               v4.25.3
// source: proto/profile.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "profile";

export interface ProfileDosenResponse {
  nidn: string;
  nama: string;
  programStudi: string;
  jenjangPendidikan: string;
  jenisKelamin: string;
  tanggalLahir: string;
  jabatanAkademik: string;
  noTelephone: string;
  alamatSurel: string;
}

export interface Account {
  uuid: string;
  username: string;
  password: string;
  token: string;
}

export interface ProfileDosenRequest {
  nama: string;
  programStudi: string;
  jenjangPendidikan: string;
  jenisKelamin: string;
  tanggalLahir: string;
  jabatanAkademik: string;
  noTelephone: string;
  alamatSurel: string;
}

export interface UpdateProfileRequest {
  account: Account | undefined;
  request: ProfileDosenRequest | undefined;
}

export interface BaseResponse {
  data?: ProfileDosenResponse | undefined;
  statusCode: number;
  message: string;
}

export const PROFILE_PACKAGE_NAME = "profile";

export interface ProfileDosenClient {
  getProfile(request: Account): Observable<BaseResponse>;

  updateProfile(request: UpdateProfileRequest): Observable<BaseResponse>;
}

export interface ProfileDosenController {
  getProfile(request: Account): Promise<BaseResponse> | Observable<BaseResponse> | BaseResponse;

  updateProfile(request: UpdateProfileRequest): Promise<BaseResponse> | Observable<BaseResponse> | BaseResponse;
}

export function ProfileDosenControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getProfile", "updateProfile"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("ProfileDosen", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("ProfileDosen", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const PROFILE_DOSEN_SERVICE_NAME = "ProfileDosen";
